import { ChatOpenAI } from "langchain/chat_models/openai";
import { SystemMessagePromptTemplate, HumanMessagePromptTemplate, ChatMessagePromptTemplate, ChatPromptTemplate } from "langchain/prompts";
import { LLMChain } from "langchain/chains";

import * as dotenv from "dotenv";
dotenv.config();

class openAi{

    constructor(stock,rlResponse, SARespone, conclusion){
        this.stock = stock;
        this.rlResponse = rlResponse;
        this.SARespone = SARespone;
        this.conclusion = conclusion;
    }

    async run(){

        const model = new ChatOpenAI({
            temperature: 0.9,
            modelName: "gpt-3.5-turbo"
        });
       

      
        const systemMessage = `
                Analytical Report on Stock Analysis:

                The task is to generate a comprehensive analytical report on a specific stock based on given criteria. Provide insights into the stock's performance, financial health, and potential future trends. Consider the following factors:

                1. Historical stock performance, the stock's performance over the past 5 years, and the stock's performance compared to the market, the stock will be given in the input as a stock ticker.
                2. Financial indicators (e.g., revenue, profit margin, etc.), will be givne in the input as reinforcment learning.
                3. Recent news and events affecting the stock, given by the user in the input as sentiment analysis.
                4. Analyst recommendations.
                5. Any emerging trends in the industry.
                6. Do not mention that u are a robot and that the report is generated by AI.
                7. End the report with a conclusion and recommendation, which will be given by the user as input.
                8. A Warning message to the user and that the report is not financial advice and should not be used at one's own risk and we are not responsible for any losses.

                Ensure the report is well-organized and covers both quantitative and qualitative aspects. Use clear language and present the information in a format suitable for analysis.

                The user input will be given in the following format:
                stock ticker: {stock ticker}
                results forom sentiment analysis: {this.SARespone},
                results from reinforcment Learning:  {this.rlResponse}
                Final Conclusion: {this.conclusion}
            `; 
        const prompt = `
            stock ticker: ${this.stock}
            results from sentiment analysis:${this.SARespone},
            results from reinforcement Learning:  ${this.rlResponse}
            Final Conclusion: ${this.conclusion}
        `
        const reportPrompt = ChatPromptTemplate.fromMessages([
            SystemMessagePromptTemplate.fromTemplate("{text}"),
            HumanMessagePromptTemplate.fromTemplate("{input}")
        ]);
        const chain = new LLMChain({
            prompt: reportPrompt,
            llm: model,
        });
        const res = chain.call({
            text: systemMessage,
            input: this.input
        })

        console.log(res);

        return res;
    }

}